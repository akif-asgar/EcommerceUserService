# name: Django CI/CD

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     services:
#       db:
#         image: postgres:16
#         env:
#           POSTGRES_USER: ecommerce_user
#           POSTGRES_PASSWORD: StrongPass123!
#           POSTGRES_DB: ecommerce_db
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd "pg_isready -U ecommerce_user -d ecommerce_db"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.10'

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install poetry
#         poetry install --no-interaction --no-ansi

#     - name: Run Django migrations
#       env:
#         DATABASE_URL: postgres://ecommerce_user:StrongPass123!@localhost:5432/ecommerce_db
#       run: python manage.py migrate

#     - name: Run Django tests
#       env:
#         DATABASE_URL: postgres://ecommerce_user:StrongPass123!@localhost:5432/ecommerce_db
#       run: python manage.py test

#   docker-build-and-push:
#     needs: build-and-test
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3

#     - name: Log in to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_HUB_USERNAME }}
#         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#     - name: Build Docker image
#       run: docker build -t your-dockerhub-username/userservice-web:latest .

#     - name: Push Docker image
#       run: docker push your-dockerhub-username/userservice-web:latest
